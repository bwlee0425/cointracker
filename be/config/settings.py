"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import django
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1']

# CORS 설정
CORS_ALLOWED_ORIGINS = [
    'http://localhost:5173',  # Vite 프론트엔드 포트
]

# 디버그용 (임시)
CORS_ALLOW_ALL_ORIGINS = True  # 프로덕션에선 비활성화


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'drf_spectacular',
    'django_celery_beat',
    'data_collection',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'Cointracker API',
    'DESCRIPTION': 'API for BTCUSDT market data, providing real-time and historical data for order book, funding rate, trade volume, and liquidation.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': True,
    'SWAGGER_UI_SETTINGS': {
        'deepLinking': True,
        'displayOperationId': True,
        'defaultModelsExpandDepth': 1,
        'defaultModelExpandDepth': 1,
        'displayRequestDuration': True,
        'docExpansion': 'none',  # 엔드포인트 접힌 상태로 시작
        'filter': True,  # 검색 필터 활성화
        'persistAuthorization': True,  # 인증 유지
        'tryItOutEnabled': True,  # "Try it out" 버튼 활성화
    },
    'REDOCC_SETTINGS': {
        'expandResponses': 'all',  # 모든 응답(200, 404 등) 확장
        'requiredPropsFirst': True,  # 필수 속성 먼저 표시
        'sortPropsAlphabetically': True,  # 속성 알파벳순 정렬
        'hideDownloadButton': False,  # 스키마 다운로드 버튼 표시
        'hideHostname': False,  # 호스트명 표시
        'noAutoAuth': False,  # 인증 UI 표시
        'pathInMiddlePanel': True,  # 경로를 중앙 패널에 표시
        'nativeScrollbars': True,  # 브라우저 기본 스크롤바
        'theme': {
            'colors': {
                'primary': {'main': '#1E90FF'},  # 메인 색상
                'success': {'main': '#28A745'},
                'warning': {'main': '#FFC107'},
                'error': {'main': '#DC3545'},
            },
            'typography': {
                'fontSize': '16px',
                'fontFamily': 'Inter, sans-serif',
                'fontWeightRegular': '400',
                'fontWeightBold': '600',
                'headings': {
                    'fontWeight': '700',
                    'lineHeight': '1.4',
                },
                'code': {
                    'fontSize': '14px',
                    'fontFamily': 'monospace',
                    'color': '#D63384',
                },
            },
            'sidebar': {
                'backgroundColor': '#1C2526',  # 다크 그레이
                'textColor': '#FFFFFF',
                'activeTextColor': '#1E90FF',
            },
            'rightPanel': {
                'backgroundColor': '#F8F9FA',  # 라이트 그레이
                'textColor': '#333333',
            },
        },
    },
}

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'config' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('POSTGRES_DB'),
        'USER': os.getenv('POSTGRES_USER'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD'),
        'HOST': os.getenv('POSTGRES_HOST', default='localhost'),
        'PORT': os.getenv('POSTGRES_PORT', default='5432'),
    }
}

REDIS_URL = os.getenv('REDIS_URL')

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CELERY_BROKER_URL = os.getenv('REDIS_URL')
CELERY_RESULT_BACKEND = os.getenv('REDIS_URL')
CELERY_TASK_SERIALIZER = 'json'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'
CELERY_ENABLE_UTC = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'level': 'DEBUG',
        },
    },
    'loggers': {
        '': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'celery': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'data_collection': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}